name: Build and push multiple env by tags

on:
  push:
    branches: [ main ]

jobs:

  precheck-build-validation:
    runs-on: ubuntu-20.04
    
    steps:
      - uses: actions/checkout@v2
      - name: yamllint
        uses: ibiqlik/action-yamllint@v3
        with:
          file_or_dir: kubernetes/*.yaml
          config_file: .yamllint.yml         
            
      - name: dockerlint
        uses: luke142367/Docker-Lint-Action@v1.0.0
        with:
          target: Dockerfile
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
          
  build_push_image:
    runs-on: ubuntu-20.04
    environment: 'stage'
    needs: precheck-build-validation

    steps:
      - uses: actions/checkout@v2
      
#       - name: Generate Tag values #using SHA of the commit that triggered workflow
#         run: IMAGE_TAG=$((echo $GITHUB_SHA | head -c7))         
             
      - name: github runner options
        run: echo ${{ github.run_id }}

      - name: Update deployment file
        run: |
          sed -i 's|ENV:VALUE|ENV|' Dockerfile

      - name: Build and push staging image
        uses: docker/build-push-action@v1.1.1        
        with:
          username: ${{ secrets.ACR_LOGIN }}
          password: ${{ secrets.ACR_PASSWORD }}
          registry: ${{ secrets.ACR_NAME }}
          repository: contoso-website
          tags: ${{ github.run_id }}
          
  approvalDev:
    runs-on: ubuntu-20.04
    environment: 'stage'
    needs: build_push_image
    steps:
      - name: Appoval status
        run: |
          echo "Deployement to DEV env is Approved"
          
  deployDEV:
    runs-on: ubuntu-20.04    
    needs: [build_push_image, approvalDev] 

    steps:
      - uses: actions/checkout@v2
      - name: Kubectl tool installer
        uses: Azure/setup-kubectl@v2.1
        with:
         version: v1.22.2 # default is latest
      
      - name: Get AKS Credentials
        uses: Azure/aks-set-context@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          resource-group: ${{ secrets.RESOURCE_GROUP_NAME }}
          cluster-name: ${{ secrets.AKS_CLUSTER_NAME }}   
          
      - name: Update deployment file
        run: |
          cd kubernetes
          sed -i 's|<IMAGE>|'${{ github.run_id }}'|' deployment.yaml
          sed -i 's|ENV|environment dev|' index.html
        
      - name: application deployment Commands 
        run: |
          kubectl get namespace | grep -q "^stage " || kubectl create namespace stage
          kubectl get ns
          echo "deploying to aks"
          cd ./kubernetes/
          kubectl delete configmap staticfile -n stage
          kubectl create configmap staticfile  --from-file index.html -n stage
          kubectl apply -f . -n stage

  approvalQA:
    runs-on: ubuntu-20.04
    environment: 'qa'
    needs: deployDEV
    
    steps:
      - name: Appoval status
        run: |
          echo "Deployement to QA env is Approved"
  
  deployQA:
    runs-on: ubuntu-20.04
    environment: 'qa'
    needs: approvalQA

    steps:
      - uses: actions/checkout@v2

      - name: Get AKS Credentials
        uses: Azure/aks-set-context@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          resource-group: ${{ secrets.RESOURCE_GROUP_NAME }}
          cluster-name: ${{ secrets.AKS_CLUSTER_NAME }}

      - name: Kubectl tool installer
        uses: Azure/setup-kubectl@v2.1
        with:
         version: v1.22.2 # default is latest
         
      - name: Update deployment file     
        run: |
          cd kubernetes
          sed -i 's|<IMAGE>|'${{ github.run_id }}'|' deployment.yaml
          sed -i 's|ENV|environment qa|' index.html
        
      - name: application deployment Commands 
        run: |
          kubectl get namespace | grep -q "^qa " || kubectl create namespace qa
          kubectl get ns
          echo "deploying to aks"
          cd ./kubernetes/
          kubectl delete configmap staticfile -n qa
          kubectl create configmap staticfile  --from-file index.html -n qa
          kubectl apply -f . -n qa
